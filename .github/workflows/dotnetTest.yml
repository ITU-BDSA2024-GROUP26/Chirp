# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .Net Test
on: [ push, workflow_call, workflow_dispatch ]

env: 
  ArtifactPath: /usr/share

permissions:
  contents: read

jobs:
  setup-dotnet: 
    name: Setup dotnet
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.x.x
  
  define-matrix: 
    name: Define Matrix
    runs-on: ubuntu-latest 
    outputs: 
      dirs: ${{ steps.dirs.outputs.dirs }}

    steps:
    - name: Checkout 
      uses: actions/checkout@v4
    
    - name: List Dirs
      id: dirs
      shell: bash
      run: |
        dirs=($(ls tests/* -d)) 

        out="["
        for dir in "${dirs[@]}";
        do
          if [[ "$dir" != *UI* ]]; then 
            out+=\"$dir\",
          fi 
        done;

        # replace final , with ]
        out="dirs=${out%?}]" #prints out without the last character, then appends ]

        echo $out >> "$GITHUB_OUTPUT"

  test:
    name: Test
    needs: [setup-dotnet, define-matrix]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dirs: ${{ fromJSON(needs.define-matrix.outputs.dirs) }}
    steps: 
    - name: Checkout 
      uses: actions/checkout@v4

    - name: Test
      shell: bash
      run: |
        dotnet build ${{ matrix.dirs }}
        dotnet test ${{ matrix.dirs }} --no-build

  UI-test:
    name: UI Test 
    needs: setup-dotnet
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v4
    
    - name: Cache Playwright binaries 
      id: playwright-bins
      uses: actions/cache@v4
      with:
        path: /home/runner/.cache/ms-playwright
        key: playwright-bins

    - name: Install powershell
      uses: cakhanif/action-install-powershell@v1
    
    - name: Build UItest project 
      run: dotnet build tests/Chirp.Web.UITest 
    
    - name: Install Playwright with dependencies
      if: steps.playwright-bins.outputs.cache-hit != 'true'
      run: pwsh tests/Chirp.Web.UITest/bin/Debug/net8.0/playwright.ps1 install --with-deps

    - name: Build Chirp.Web binaries 
      run: dotnet build src/Chirp.Web/ -c Debug 
    
    - name: Export Chirp.Web binaries 
      run: dotnet publish src/Chirp.Web/ -c Debug -o tests/Chirp.Web.UITest/bin/Debug/net8.0

    - name: Run Tests
      env:
        GITHUBCLIENTID: ${{ secrets.GITHUBCLIENTID }}
        GITHUBCLIENTSECRET: ${{ secrets.GITHUBCLIENTSECRET }}
      run: dotnet test tests/Chirp.Web.UITest --no-build --verbosity normal

  Setup-Migration: 
    name: Setup migration bundle
    needs: setup-dotnet
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v4
      
      - name: Install dotnet-ef 
        run: dotnet tool install --global dotnet-ef --version 9.0.0-rc.1.24451.1
      
      - name: Make directory
        shell: bash
        run: |
              mkdir -p ${{env.ArtifactPath}}/migrate
      
      - name: Create Migration Bundle
        shell: bash 
        run: |
              cd src/Chirp.Infrastructure
              ASPNETCORE_ENVIRONMENT=Production dotnet ef migrations bundle -s ../../Chirp.Web -o ${{env.ArtifactPath}}/migrate/tbundle
            
      - name: Upload artifacts for test job
        uses: actions/upload-artifact@v4
        with:
          name: testmigration
          path: ${{env.ArtifactPath}}/migrate
  
  Download-Database: 
    name: Download database from azure
    runs-on: ubuntu-latest 
    steps: 
      - uses: actions/checkout@v4

      - name: Make target directory 
        run: mkdir -p  ${{env.ArtifactPath}}/database

      - name: Install azure CLI and download database
        uses: Azure/CLI@v2
        with: 
          inlinescript: |
            az storage file download --account-name ${{ secrets.STORAGE_ACCOUNT_NAME }} \
            --account-key ${{ secrets.STORAGE_ACCOUNT_KEY }} \
            --share-name databases-fileshare \
            --path chirp.db \
            --dest $GITHUB_WORKSPACE/chirp.db
      
      - name: Copy database file
        shell: bash
        run: |
          echo This Dir: 
          ls 
          cp chirp.db ${{env.ArtifactPath}}/database/chirp.db      

      - name: Upload artifacts for test job
        uses: actions/upload-artifact@v4
        with:
          name: database
          path: ${{env.ArtifactPath}}/database
  
  Migration-Test: 
    name: Test database migration 
    needs: [Download-Database, Setup-Migration]
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v4 

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      
      - name: Ensure database was uploaded 
        shell: bash 
        run: |
          if ! [ -f chirp.db ]; then 
            exit 1
          fi

      - name: Execute bundle 
        shell: bash
        run: |
          chmod +x tbundle
          ASPNETCORE_ENVIRONMENT=Production ./tbundle --connection "Data Source=chirp.db"
      
      



        
        
